#!/bin/bash
# validfloat – Проверяет допустимость вещественного значения.
#   Имейте в виду, что сценарий не распознает научную форму записи (1.304e5).
# Чтобы проверить вещественное значение, его нужно разбить на две части:
#   целую и дробную. Первая часть проверяется как обычное целое число,
#   а дробная – как положительное целое число. То есть число -30.5 оценивается
#   как допустимое, а -30.-8 нет.

# Подключение других сценариев к текущему осуществляется с помощью оператора "."
# Довольно просто.
. validint

# Проверить наличие десятичной точки.
if [ ! -z $(echo $fvalue | sed 's/[^.]//g') ] ; then
  
  # Извлечь целую часть числа, слева от десятичной точки.
  decimalPart="$(echo $fvalue | cut -d. -f1)"
  
  # Извлечь дробную часть числа, справа от десятичной точки.
  fractionalPart="${fvalue#*\.}"
  
  # Проверить целую часть числа, слева от десятичной точки
  if [ ! -z $decimalPart ] ; then
    # "!" инвертирует логику проверки, то есть ниже проверяется
    #   "если НЕ допустимое целое число"
    if ! validint "$decimalPart" "" "" ; then
    return 1 fi
  fi
  
  # Теперь проверим дробную часть.
  # Прежде всего, она не может содержать знак "минус" после десятичной точки,
  #   например: 33.-11, поэтому проверим знак '-’ в дробной части.
  
  if [ "${fractionalPart%${fractionalPart#?}}" = "-" ] ; then
    echo "Invalid floating-point number: '-' not allowed \
      after decimal point." >&2
    return 1 fi
  if [ "$fractionalPart" != "" ] ; then
    # Если дробная часть НЕ является допустимым целым числом...
    if ! validint "$fractionalPart" "0" "" ; then
    return 1 fi
  fi
else
  # Если все значение состоит из единственного знака "-",
  #   это недопустимое значение.
  if [ "$fvalue" = "-" ] ; then

validfloat()
{
  fvalue="$1"
    echo "Invalid floating-point format." >&2
  return 1 fi
  	# В заключение проверить, что оставшиеся цифры представляют
  	# допустимое целое число.
  	if ! validint "$fvalue" "" "" ; then
	return 1 fi
fi
	return 0 
}

### Проверка сценария
if validfloat $1 ; then
  echo "$1 is a valid floating-point value."
fi
